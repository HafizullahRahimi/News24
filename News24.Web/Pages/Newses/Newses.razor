@using News24.Business.Repository.IRepository
@using News24.DTOs.Newses
@inject INewsRepository NewsRepository

@page "/newses"
<PageTitle>اخبار</PageTitle>

<div class="latest-posts">
    <div class="container-fluid">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-3">
                    <div class="blog-title-span">

                            <input type="text" @bind="Filter.Title" class="form-control" placeholder="جستجو ..." /> 
                    </div>
                </div>
                <div class="col-md-2">
                    <button class="btn btn-success btn-block" @onclick="() => FilterNewsesData()">جستجو</button>
                </div>
            </div>

            @if (Filter.Newses != null && Filter.Newses.Any())
            {
                @foreach (var news in Filter.Newses)
                {
                    <SingleNewsItem News="@news" />
                }
            }
        </div>
        <div class="col-md-12 text-center">
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    @if (Filter.Newses != null && Filter.Newses.Any())
                    {
                        @if (Filter.Page > 1)
                        {
                            <li class="page-item"><a class="page-link" @onclick="() => HandlePageClick(Filter.Page - 1)">قبلی</a></li>
                        }
                        @for (int i = Filter.StartPage; i <= Filter.EndPage; i++)
                        {
                            var pageId = i;
                            <li class="page-item @(Filter.Page == pageId ?"active":"")"><a class="page-link" @onclick="() => HandlePageClick(pageId)">@pageId</a></li>
                        }

                        if (Filter.Page < Filter.EndPage)
                        {
                            <li class="page-item"><a class="page-link" @onclick="() => HandlePageClick(Filter.Page + 1)">بعدی</a></li>

                        }
                    }
                </ul>
            </nav>
        </div>
    </div>

</div>


@code
{
    private FilterNewsesDTO Filter = new FilterNewsesDTO();

    protected override async Task OnInitializedAsync()
    {
        await FilterNewsesData();
    }

    private async Task HandlePageClick(int page)
    {
        Filter.Page = page;
        await FilterNewsesData();
    }

    private async Task FilterNewsesData()
    {
        Filter.Take = 2;
        Filter = await NewsRepository.FilterNewses(Filter);
    }
}
